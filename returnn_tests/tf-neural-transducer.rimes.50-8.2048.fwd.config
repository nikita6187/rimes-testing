#!crnn.py
# kate: syntax python;

use_tensorflow = True

import os
from Util import get_login_username


task = "forward"

train = "/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0001,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0002,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0003,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0004,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0005,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0006,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0007,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0008,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0009,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/train.0010"

dev = "/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0001,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0002,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0003,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0004,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0005,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0006,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0007,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0008,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0009,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0010"

eval = "/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0001,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0002,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0003,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0004,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0005,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0006,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0007,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0008,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0009,/u/doetsch/env/data/rimes/words/files/pca.ctc/hdf5/valid.0010"

num_inputs = 20
num_outputs = 81
batching = "random"
batch_size = 10000
max_seqs = 10
# TODO: Figure out gpu
device = "gpu"
log_device_placement = True

network = {
"fw0": {"class": "rec", "unit": "NativeLSTM", "n_out": 2048},
"output": {"class": "neural_transducer", "loss": "neural_transducer", "from": ["fw0"], "transducer_hidden_units":2048,
            "n_out":82, "transducer_max_width":8, "input_block_size":50, "embedding_size":20, "e_symbol_index":81, 
	    "use_prev_state_as_start":True,
            "loss_opts":{
                "debug":True
            }
          }
}

# log
log_verbosity = 5

model = "./final_model/rimes.50-8.2048.50/"

output_file = '/logs/rimes.nt.50-8.2048.50/forwarded.hdf'



